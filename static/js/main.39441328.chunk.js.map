{"version":3,"sources":["store/reducers/photosReducer.js","store/reducers/commentsReducer.js","store/reducers/index.js","store/store.js","components/Comments/Comments.js","store/actions/actions.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["initialState","data","rootReducer","combineReducers","photosReducer","state","action","type","payload","error","commentsReducer","store","createStore","applyMiddleware","thunk","Comments","dispatch","useDispatch","location","useLocation","useState","photoUrl","setPhotoUrl","comments","useSelector","newComment","setNewComment","useEffect","number","id","fetch","then","response","json","catch","url","className","src","alt","length","map","item","name","body","onSubmit","event","post","preventDefault","method","headers","JSON","stringify","console","log","onChange","target","value","withRouter","photoDetails","author","download_url","to","pathname","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39441328.chunk.js","sourcesContent":["const initialState = {\r\n\tdata: [],\r\n};\r\n\r\nexport const photosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_PHOTO_REQUEST\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"GET_PHOTO_SUCCESS\":\r\n      return {\r\n        ...state,\r\n\t\tdata: [...state.data, action.payload],\r\n      };\r\n    case \"GET_PHOTO_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  data: {},\r\n};\r\n\r\nexport const commentsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_NEW_COMMENT\":\r\n      return {\r\n        ...state,\r\n        data: [action.payload, ...state.data],\r\n      };\r\n    case \"GET_COMMENT_REQUEST\":\r\n      return {\r\n        ...state,\r\n      };\r\n    case \"GET_COMMENT_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    case \"GET_COMMENT_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { photosReducer } from \"./photosReducer\";\r\nimport { commentsReducer } from \"./commentsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  photosReducer,\r\n  commentsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { addComment, getComments } from \"../../store/actions/actions\";\r\nimport \"./Comments.scss\";\r\n\r\nfunction Comments() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const [photoUrl, setPhotoUrl] = useState();\r\n  const comments = useSelector((state) => state.commentsReducer.data);\r\n  const [newComment, setNewComment] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(getComments(location.state.id));\r\n    setPhotoUrl(location.state.url);\r\n  }, [location]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addComment(newComment, location.state.id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Comments</h3>\r\n      <div className=\"comments\">\r\n        <img src={photoUrl} alt=\"a nice photo\" id={location.state.id} />\r\n        <div className=\"comments-section\">\r\n          <h4>Comments</h4>\r\n          {comments.length > 0 ? (\r\n            comments.map((item) => (\r\n              <>\r\n                <p className=\"comment\">\r\n                  <p className=\"user\">{item.name}</p>\r\n                  <p>{item.body}</p>\r\n                </p>\r\n              </>\r\n            ))\r\n          ) : (\r\n            <p className=\"no-comment\">\r\n              There is no comment üôÅ Add first comment on this photo!\r\n            </p>\r\n          )}\r\n          <form onSubmit={handleSubmit} className=\"form\">\r\n            <input\r\n              onChange={(event) =>\r\n                setNewComment({ name: \"Commentator\", body: event.target.value })\r\n              }\r\n              value={newComment.body}\r\n            />\r\n            <button type=\"submit\">Add new comment</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","export const getPhoto = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"GET_PHOTO_REQUEST\" });\r\n    fetch(`https://picsum.photos/v2/list`)\r\n      .then((response) => response.json())\r\n      .then((data) => dispatch({ type: \"GET_PHOTO_SUCCESS\", payload: data }))\r\n      .catch((error) => dispatch({ type: \"GET_PHOTO_ERROR\", payload: error }));\r\n  };\r\n};\r\n\r\nexport const getComments = (number) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"GET_COMMENTS_REQUEST\" });\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${number}/comments`)\r\n      .then((response) => response.json())\r\n      .then((data) => dispatch({ type: \"GET_COMMENT_SUCCESS\", payload: data }))\r\n      .catch((error) =>\r\n        dispatch({ type: \"GET_COMMENT_ERROR\", payload: error })\r\n      );\r\n  };\r\n};\r\n\r\nexport const addComment = (post, id) => {\r\n  return (dispatch) => {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(post),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => dispatch({ type: \"ADD_NEW_COMMENT\", payload: data }))\r\n      .catch((error) => console.log(error));\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getPhoto } from \"../../store/actions/actions\";\r\nimport \"./Dashboard.scss\";\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPhoto());\r\n  }, []);\r\n\r\n  const photoDetails = useSelector((state) => state.photosReducer.data[0]);\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">Criticize My Photo!</h2>\r\n      <div className=\"dashboard\">\r\n        {photoDetails &&\r\n          photoDetails.map((item) => (\r\n            <div className=\"dashboard-photo\">\r\n              <span className=\"author\">{item.author}</span>\r\n              <img id={item.id} src={item.download_url} alt=\"a nice photo\" />\r\n              <Link\r\n                className=\"router\"\r\n                to={{\r\n                  pathname: \"/Comments\",\r\n                  state: { id: item.id, url: item.download_url },\r\n                }}\r\n              >\r\n                See comments...\r\n              </Link>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Dashboard);\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Comments from \"./components/Comments/Comments\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/Dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/comments\">\n            <Comments />\n          </Route>\n\t\t  <Route path=\"/\">\n\t\t    <Dashboard />\n\t\t  </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store/store\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}